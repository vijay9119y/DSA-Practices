class Solution(object):
    def findMinArrowShots(self, points):
        if not points:
            return 0
        
        # Sort the balloons based on their end coordinates
        points.sort(key=lambda x: x[1])
        
        arrows = 1
        prev_end = points[0][1]
        
        for start, end in points[1:]:
            # If the start coordinate of the current balloon is greater than
            # the current end coordinate, a new arrow is needed
            if start > prev_end:
                arrows += 1
                prev_end = end
                
        return arrows

#Link-https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/
